strategy:
  matrix:
    windows:
      imageName: 'vs2017-win2016'
    mac:
      imageName: 'macOS-latest'
    linux:
      imageName: 'ubuntu-18.04'

trigger:
- none

pool:
  vmImage: $(imageName)

steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"      
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain stable
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"      
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: cargo build --release
    displayName: Cargo build
  - task: CopyFiles@2
    inputs:
      Contents: '**/target/release/AccountManagerWithActix.exe'
      TargetFolder: '$(System.DefaultWorkingDirectory)/$(imageName)/'
  - task: CopyFiles@2
    inputs:
      Contents: '**/target/release/AccountManagerWithActix'
      TargetFolder: '$(System.DefaultWorkingDirectory)/$(imageName)/'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)/$(imageName)'
      includeRootFolder: true
      archiveType: '7z'
      sevenZipCompression: 'ultra'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(imageName)/$(imageName)_$(Build.BuildId).7z'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: drop
